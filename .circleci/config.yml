version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@6.3.0
  
references:
  js_deps_cache_key: &js_deps_cache_key
    v1-dependency-{{ checksum "package-lock.json" }}
  js_deps_backup_cache_key: &js_deps_backup_cache_key
    v1-dependency-

jobs:
  test:
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - restore_cache:
          keys:
          - *js_deps_cache_key
          - *js_deps_backup_cache_key
      - run: 
          name: install npm dependecies
          command: npm i
      - save_cache:
          paths:
            - node_modules
          key: *js_deps_cache_key
      - run: npm test

  release:
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - restore_cache:
          keys:
          - *js_deps_cache_key
          - *js_deps_backup_cache_key
      - run:
          name: install npm dependecies
          command: npm i
      - run: git config --global push.default matching
      - run: git config --global user.email "totem-bot@darteaga.com"
      - run: git config --global user.name "Totem Bot"
      - run: npm run release
      - save_cache:
          paths:
            - node_modules
          key: *js_deps_cache_key
  
  docs_deliver:
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - restore_cache:
          keys:
          - *js_deps_cache_key
          - *js_deps_backup_cache_key
      - run: git pull
      - run: npm i
      - run: npm run docs:version
      - run: git config --global push.default current
      - run: git config --global user.email "totem-bot@darteaga.com"
      - run: git config --global user.name "Totem Bot"
      - run: git add .
      - run: | 
          git commit -m "docs: fix new docs version [ci skip]"
      - run: git push
      - run: npm run docs:build
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS docker-registry.darteaga.com
      - run: npm run docs:docker:push
      - save_cache:
          paths:
            - node_modules
          key: *js_deps_cache_key
          
  npm_publish:
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - restore_cache:
          keys:
          - *js_deps_cache_key
          - *js_deps_backup_cache_key
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ./.npmrc
      - run:
          name: Build assests
          command: npm run build
      - run:
          name: Publish package
          command: npm publish dist/

workflows:
  version: 2
  all:
    jobs:
      - test:
          filters:
            branches:
              ignore:
                - master
              
  production:
    jobs:
      - test:
          filters:
            branches:
              only:
                - master
      - release:
          requires:
            - test
          filters:
            branches:
              only:
                - master

      - aws-ecr/build-and-push-image:
          requires:
            - release
          account-url: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com
          repo: ${AWS_ERC_REPO_NAME}
          region: ${AWS_DEFAULT_REGION}
          tag: latest,${CIRCLE_SHA1}
          filters:
            branches:
              only:
                - master

      - npm_publish:
          requires:
            - aws-ecr/build-and-push-image
          filters:
            branches:
              only:
                - master

